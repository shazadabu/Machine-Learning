2+2+2
clear
clearPushBack()
close()
getwd()
setwd('L:\Courses\Machine leaning A-Z\Machine Learning A-Z Template Folder\Part 1 - Data Preprocessing
')
setwd('L:\Courses\Machine leaning A-Z\Machine Learning A-Z Template Folder\Part 1 - Data Preprocessing
')
setwd('L:\Courses\Machine leaning A-Z\Machine Learning A-Z Template Folder\Part 1 - Data Preprocessin')
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessin')
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression')
getwd()
#setting working directory
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Section 5 - Multiple Linear Regression')
setwd("L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression")
#setting working directory
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Section 5 - Multiple Linear Regression')
getwd()
#read dataset
dataset=read.csv('50_Startups.csv')
View(dataset)
View(dataset)
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Section 5 - Multiple Linear Regression')
getwd()
#read dataset
dataset=read.csv('50_Startups.csv')
View(dataset)
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'Californa', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
#missing data
View(dataset)
View(dataset)
dataset=read.csv('50_Startups.csv')
View(dataset)
View(dataset)
View(dataset)
#setting working directory
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Section 5 - Multiple Linear Regression')
getwd()
#read dataset
dataset=read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
regressor=lm(formula = Profit ~ .,
data = training_set)
library(caTools)
split =sample.split(dataset$Salary,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
View(dataset)
View(dataset)
library(caTools)
split =sample.split(dataset$Profit,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
regressor=lm(formula = Profit ~ .,
data = training_set)
Y_pred=predict(regressor,newdata= test_set)
YY_pred
Y_pred
View(test_set)
View(test_set)
View(test_set)
View(test_set)
summary(regressor)
View(dataset)
View(dataset)
regressor=lm(formula = Profit ~ .R.D.Spend + Administration + Marketing.spend + State
data = dataset)
#multi variable regression
regressor=lm(formula = Profit ~ R.D.Spend + Administration + Marketing.spend + State
data = dataset)
#multi variable regression
regressor=lm(formula = Profit ~ R.D.Spend + Administration + Marketing.spend + State
data = dataset)
regressor=lm(formula = Profit ~ R.D.Spend + Administration + Marketing.spend + State
data = training_set)
#setting working directory
setwd('L:/Courses/Machine leaning A-Z/Machine Learning A-Z Template Folder/Section 5 - Multiple Linear Regression')
getwd()
#read dataset
dataset=read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
#splitting
library(caTools)
split =sample.split(dataset$Profit,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
regressor=lm(formula = Profit ~ R.D.Spend + Administration + Marketing.spend + State
data = training_set)
#multi variable regression
regressor=lm(formula = Profit ~ R D.Spend + Administration + Marketing.Spend + State
data = training_set)
regressor=lm(formula = Profit ~ R D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor=lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
Y_pred=predict(regressor,newdata= test_set)
summary(regressor)
#multi variable regression
regressor=lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend ,
data = training_set)
Y_pred=predict(regressor,newdata= test_set)
#checking p valuue
summary(regressor)
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)){
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
SL = 0.05
dataset = dataset[, c(1,2,3,4,5)]
backwardElimination(training_set, SL)
